          ANSIBLE NOTEPAD BY GOVERDHAN
						  
						  
 take the 3 instances AMAZON(2 tier) 
						  
			 1. server  			  
              2. node 1
			 3. node 2
			   sudo -i
			sudo yum update
	  sudo yum-config-manager --enable epel
      sudo amazon-linux-extras install epel
			 yum repolist
		  yum install ansible -y
		   ansible --version
		   cd /etc/ansible/
	          ls -ltr                                
        (roles,hosts,ansible,config will see)
			 cd roles/
		     ls -ltr
			  cd ..
			  vi hosts 
			  Esc+d+G

 [server]
server private ip(172.31.40.23) ansible_user=ec2-user
						  
 example: - below the server
						  
 172.31.40.23 ansible_user=ec2-user

 [nodes]
						  
node1 private ip(172.14.40.23) ansible_user=ec2-user
    
      example: -below the nodes
						  
	172.31.40.23 ansible_user=ec2-user
	172.31.45.87 ansible_user=ec2-user
                               	
			ansible -m ping  all


              yes 4 tmies

       host key verfication failed..
				    
            vi vardhankey.pem   

(what we creat an earlier in desktop that one )
				  
 go to desktop -->selecte pemkey-->R.T click 
                  
 edit the notepad -->copy that key-->paste it 
                 
				  then
         sudo chmod 600 vardhankey.pem 
	     
         ansible -m ping -u ec2-user all
					  
ansible -m ping --private-key=vardhankey.pem all 
               
		succesfully 3 serever will be connected

ansible -m ping --private-key=vardhankey.pem nodes

ansible -m ping --private-key=vardhankey.pem server 
	
ansible -m ping --private-key=vardhankey.pem 'server:!nodes'

ansible -m ping --private-key=vardhankey.pem '!server:nodes'

ansible -m setup --private-key=vardhankey.pem all 		   
							
			 ansible --version 
						  
 ansible --private-key=vardhankey.pem -m ping all

                    vi govi.txt
         This is vardhan devops engineer
                    
                    save it 
             
                 $ In server only 

$    ansible nodes --private-key=vardhankey.pem -m copy -a 'src=/etc/ansible/govi.txt dest=/home/ec2-user/govi.txt'

$  go to ---> node 1 and node 2		
      
	       ls -ltr

       govi.txt (we will saw)

        cat govi.txt
"This is goverdhan devops engineer" (we will saw)

           ls -ltr 
      
      we saw the permesions

$      ansible nodes --private-key=vardhankey.pem -m copy -a 'src=/etc/ansible/govi.txt dest=/home/ec2-user/govi.txt mode=666'

               ls -ltr
      check the permision of the file


        *****command  module******* :-

      ansible nodes --private-key=vardhankey.pem -m command -a 'free -h'

      ansible nodes --private-key=vardhankey.pem -m command -a 'df -h'

      ansible nodes --private-key=vardhankey.pem -m command -a 'free -h && df -h'

 ***command moduel won't excute any special 
character's like | ,&& ,$ ,",' like this *********
 
 
         ********shell moduel ***********

    *shell module excute all special characters* 

 
      ansible nodes --private-key=vardhankey.pem -m shell -a 'df -h && free -h'
 
      ansible nodes --private-key=vardhankey.pem -m shell -a 'cat govi.txt | grep -i "devops"'
 
      ansible nodes --private-key=vardhankey.pem -m shell -a 'df -h && free -h && cat govi.txt | grep -i "devops"'
  
  
 
          ** file module ** 
  
**create a directory with using this file module**
    
     ansible nodes --private-key=vardhankey.pem -m file -a 'dest=/home/ec2-user/govi.txt mode=642'

$ now check the permisson of file in nodes 1 & node 2
	 
  
ansible nodes --private-key=vardhankey.pem -m file -a 'dest=/home/ec2-user/govitech mode=600 state=directory'

	 *****create a file  with using of file module******
	 
ansible nodes --private-key=vardhankey.pem -m file -a 'dest=/home/ec2-user/sample.sh mode=642 state=touch'
	 
	&&&&&  check it nodes     &&&
	
	ansible nodes --private-key=vardhankey.pem -m file -a 'dest=/home/ec2-user/sample.sh mode=642 state=absent'
  
  *****go to node ckeck it out can't see the sample.sh file ***
  
  ********yum module******(use to create httpd )
  
  ansible nodes -b --private-key=vardhankey.pem -m yum -a 'name=httpd state=present'
  
****** check  service in node1&node2***
 
 sudo service httpd status
 
****service module *****(use to start httpd )
  
  ansible nodes -b --private-key=vardhankey.pem -m service -a 'name=httpd state=started'
  
  ****** check  service in node1&node2***
 
 sudo service httpd status

go to any instaces --->go to launchwizard---->inbound--> HTTP--->80-->anywere.

                       Apache2 will see 
					   
					   then  uninstall the Apache2 in server
					   
				yum install is (used to creat & stop the httpd)

 ansible nodes -b --private-key=vardhankey.pem -m yum -a 'name=httpd state=absent'
					   
			****Line in file (adding the line in file)****
			
ansible nodes -b --private-key=vardhankey.pem -m lineinfile -a 'dest=/home/ec2-user/govi.txt line="echo this notes writen by vardhan"'
					   
 *****then check in node1 &2  line added or not *****
 
 
 
                      playbooks
  
  
  
  vi create_new_file.yml
  -------                

---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "/home/ec2-user/chintu.txt"
      state: touch


ansible-playbook create_new_file.yml --syntax-check

ansible-playbook create_new_file.yml --private-key=vardhankey.pem 

*********then go to nodes check it out chintu file will exist ********		
					
 Task2 : Create a new File With Content.
 
 vi write_a_content_in_file.yml



 - hosts: nodes
   tasks:
   - name: Create file with content example
     copy:
       dest: "/home/ec2-user/chintu.txt"
       content: |
          vardhan  Reddy
             Banglore
               DevOps Architech


ansible-playbook  write_a_content_in_file.yml --syntax-check


ansible-playbook write_a_content_in_file.yml --private-key=vardhankey.pem


******create a new file and change the permissioon*******

cp create_new_file.yml create_new_file1.yml


---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "/home/ec2-user/vishnuvardhan.txt"
      state: touch


now change the permissions

cp create_new_file1.yml create_new_file_permission.yml



---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "/home/ec2-user/vishnuvardhan.txt"
      state: touch
~ 

ansible-playbook create_new_file_permission.yml --syntax-check


ansible-playbook create_new_file_permission.yml --private-key=vardhankey.pem


change the permesions

---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "/home/ec2-user/vishnuvardhan.txt"
      state: touch
      mode: 0666
~
go to node and check it 


*********how to create multiple files*********

vi create_a_multiple_file.yml 
 
---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "{{ item }}"
      state: touch
      mode: 0775
    with_items:
     - access.log
     - system.log
     - properties.txt
     - nginx.conf


ansible-playbook create_a_multiple_file.yml --syntax-check

 ansible-playbook create_a_multiple_file.yml --private-key=vardhankey.pem



go to nodes and see it 4 files created
 ***with the same permissions***


now will do *****create multiplefiles with multiple permission*****


vi create_multiple_files_multiple_permissions.yml


---
- hosts: nodes
  tasks:
  - name: Ansible create file if it doesn't exist example
    file:
      path: "{{ item.location }}"
      state: touch
      mode: "{{ item.mode }}"
    with_items:
     - { location: 'task5_file1.txt',mode: '0566'}
     - { location: 'task5_file2.txt',mode: '0766'}

ansible-playbook create_multiple_files_multiple_permissions.yml  --syntax-check

ansible-playbook create_multiple_files_multiple_permissions.yml  --private-key=vardhankey.pem

go to nodes :-  ls -ltr 

seee the permissions

                   ANSIBLE GIT INSTALLATION
				   
				   
				   
				   vi install_git.yml
---
 - hosts: nodes
   become: yes
   gather_facts: false
   tasks:
     - name: Installing git
       yum:
         name: git
         state: present

   

ansible-playbook install_git.yml --syntax-check  

ansible-playbook install_git.yml --private-key=vardhankey.pem
  
  
  next *** state :absent
  
  ****TAGS----- CONCEPT****
  
  vi install_git.yml
  
  
---
 - hosts: nodes
   become: yes
   gather_facts: False
   tasks:
    - name: Installing  git
      yum:
        name: git
        state: present
      tags: installgit
    - name: unstalling  git
      yum:
        name: git
        state: absent
      tags: uninstallgit



	

ansible-playbook install_git.yml --syntax-check

ansible-playbook install_git.yml –private
-key=vardhankey.pem
go to nodes:-- git --version

ansible-playbook install_git.yml --private-key=vardhankey.pem –skip-tags "uninstallgit"

ansible-playbook install_git.yml --private-key=vardhankey.pem –skip-tags "installgit"


*******  ANSIBLE_ROLE_INSTALL _APACHE_TOMCAT*******
  
  vi maven_install.yml


---
 - hosts: nodes
   become: yes
   tasks:
    - name: download maven
      shell: |
        wget https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo       
        sed -i s/\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo        
        yum install -y apache-maven~




ansible-playbook maven_install.yml --syntax-check

ansible-playbook maven_install.yml --private-key=vardhankey.pem


 
            ANSIBLE GALAXY 
			
	requirements : 	write a playbook multiple tasks 
                      1. install git 
                      2. install maven 
                      3. install apache tomcat


write a playbook install git and pull the code


 
	--- 
     - hosts: nodes 
       become: yes 
       roles: 
        - installgit
            tasks
              main.yml
               - name : install git
                 yum:
                  name: git
                  state: present


clone: the url of tomcat_latest_2806


       ansible-galaxy tomcat_govi init
       
	    it's a diretry
		cd ---->go to this diretry
		ls -ltr
		
		yum install tree
		
		tree
		
		cat tasks/main.yml
		
		cd ../ansible
		
		ls -ltr
		
		cd tomcat_latest
		
		ls -ltr
		
		cd ..
		
		go to github of ybmadhu


clone: the url of tomcat_latest_2806

cd tomcat_latest_2806/

ls -ltr

cat tomcat_setup.yml 

cd tomcat

tree


cat tasks/main.yml

cd ..
 

cat tomcat_setup.yml

cd tomcat

ls -ltr

cd tasks

ls-ltr

cat main.yml

now start the tomcat 

nohup/opt/apache-tomcat -8.5.45/bin/startup.sh

_______folder.sh


ansible-playbook tomcat-setup.yml --private-key=vardhan.pem --skip -tags "extract"


go to the security group of nodes 8080 will be allowed 

public ip ---> paste in new tab  

tomcat username& passwd is in our machine 


cd /etc/ansible

ls -ltr

cd tomcat

cd templates/ 

ls -ltr

cat tomcat-user.xml

***username admin

***passwd   admin



ANSIBLE END-TO-END DEPLOYMENT


Write a play book for end ot end deployment 

Software’s we required  git ,maven ,apachetomcat

Requirement 

Source code in github  download the code -> build using maven  deploy in apache tomcat .

Git clone spring3.mavne,maven .(for git ,mavne)

Vi git_project.yml

Dest :/opt/apache-tomcat-8.5.45.windows/webapp(windows will provide.)


Run the project:

Ansible-playbook git _project.yml –private-key=vardhankeypair.pem

 
Then mysql

Cd /etc/ansible
Git clone mysql-ansible-URL

Cp install_mysql.yml ../install_mysql.yml
Cp –r roles/mysql ../mysql
Cd ..
Cd mysql
Ls –ltr
Cd tasks ls –ltr
Cat main.yml
In this content of mysql
Cd ..
Cat install_mysql.yml
Vi install_mysql.yml

Here 
Host:nodes

Roles:

-mysql

ansible-playbook install_mysql.yml –private-key=vardhankey.pem


             ANSIBLE-VAULT

It is used for security for the playbooks
Sudo -i
Cd /etc/ansible

Create a vault:

 ansible-vault create test.yml

it will ask passwd : vardhan
 confirm           : vardhan

our plybook will open 


msg : this is some playbook

cat test.yml
(we cant see the content in file)

 ansible-vault edit test.yml
it will asks the passwd:
vault passwd: vardhan

 ansible-vault view test.yml
vaultpasswd: vardhan

it will excute:

ls –ltr

so we have a playbook we will provided a security for that
 
 ansible-vault install_git.yml

vaultpasswd:vardhan
confirmpasswd:vardhan


cat install_git.yml  (we can’t see it)

ansible-vault edit install_git.yml

vault passwd: vardhan
confirm :   vardhan

let’s see the content in the file


if we can change the passwd:

ansible-vault rekey install_git.yml

vaultpasswd: vardhan123
confirm:    vardhan123


if you want  to delete the security for the playbook

ansible-vault decrpt install_git.yml
vaultpasswd: vardhan123
decryption: sucesfull

if you want security for a particular folder.


  ansible-vault encrpt install_git.yml

vault passwd: govi321
sucsesfull

 ansible-playbook install_git.yml –tags “install git” –ask-vault passwd;
              vi host
server:vars
all:vars
172.31.32.131 ansible_user=ec2-user
172.31.41.91 ansible_user=ec2-user

Save it 

  Ansible- m ping all


 
HOW TO  CREATE AWS EC2 INSTANCE USING ansible



Go to aws console laumnhc one instance  connect it -> past it in git bash 

Then go to iam access amanagement 

Now craeate  acces key and acessesid & passwd
 
 Save  it 

Ingit bash :aws config 

Accesskey:   -
Passwd: -

Region name ; ap-south-1

Cd ~/.aws

Ls –ltr

Vi config
{degault region=ap-south -1}

Vi creadentials[accesskeyid&accespaswd]

Cd /etc/ansible



Vi create_ec2_instance.yml


---
- name: create ec2 instance 
  hosts: 172.31.40.23
  becomes: yes
  become_method: sudo 
  gather_facts: true
  roles: 
   - ec2

Save it 

  Cd ec2/

   ls –ltr

       vi tasks/main.yml


---
# tasks file for ec2 
- ec2: 
    key_name: vardhankey
    instance_type: t2.micro
    image: ami-00b8d9cb8a7161e41 
    wait: yes 
    group: launch-wizard-13
    count: 2
    vpc_subnet_id: subnet-079003907de544a58
    assigin_public_ip: yes 
    region: ap-southeast


save it.

Cd ..


 ansible-playbook create_ec2_instance.yml

go to brose  create ec2 instance using ansible

How to create a keyfile

   Vi create_ec2_key_file.yml




-   name: Create Aws instance
    host: 172.31.40.23
    connection: local
    gather_facts: False
    remote_user: ec2-user
    roles: 
        - key


  Vi key/tasks/main.yml



---
# tasks file for key
-   name: Create an EC2 key
    ec2_key:
        name: "vardhankey"
        region: ap-southeast
    register: ec2_key

-   name: save private key
    copy: content="{{ ec2_key.key.private_key }}" dest="./vardhankey.pem" mode=0600
    when: ec2_key.changed

 



ansible-playbook create_ec2_key_file.yml

 ls –ltr


HOW TO CREATED security group

   Vi security-group.yml


- name: create ec2 instance 
  hosts: 172.31.40.23
  becomes: yes
  become_method: sudo 
  gather_facts: true
  roles: 
   - security

Save it


    
  Vi security/tasks/main.yml


---
# tasks file for security-group
-   name: Create security-group
    ec2_group:
        name: "vardhan-security-group"
        description: "vardhan-security-group"
        region: ap-southeast
        rules:
            - porto: tcp   
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - porto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - porto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
       rules_egress:
            - porto: tcp
              cidr_ip: 0.0.0.0/0
    register: basic_firewall

               

ansible-playbook security_group.yml


Go to the security group  and check  It wil create  or not
















   

  


    

